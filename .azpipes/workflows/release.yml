trigger:
  branches:
    include:
      - "*"
  paths:
    exclude:
      - LICENSE
      - README.md

variables:
  - template: ../variables/common.vars.yml

stages:
  - stage: continuousIntegration
    displayName: ci
    jobs:
      - job: Test
        displayName: Test
        pool:
          vmImage: $(vmImage)
        steps:
          - template: ../templates/powershell/test.yml
            parameters:
              workingDirectory: $(System.DefaultWorkingDirectory)

  - stage: publishdevelopassets
    displayName: Uploading dev images to cr
    dependsOn: continuousIntegration
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: dockerhubcr
        displayName: hub.docker.com
        pool:
          vmImage: $(vmImage)
        steps:
          - template: ../templates/docker/buildandpush.yml
            parameters:
              workingDirectory: $(System.DefaultWorkingDirectory)
              imageName: ${{ variables.imageName }}
              dockerVersion: ${{ variables.dockerVersion }}
              containerRegistry: ${{ variables.containerRegistry }}
              addPipelineData: true
              imageTags: |
                develop

      - job: ghrelease
        displayName: github release
        pool:
          vmImage: $(vmImage)
        steps:
          - template: ../templates/github/createRelease.yml
            parameters:
              workingDirectory: $(System.DefaultWorkingDirectory)
              githubRepository: ${{ variables.githubRepository }}
              version: ${{ variables.version }}-develop
              githubConnection: ${{ variables.githubConnection }}
              isPreRelease: false
              addChangeLog: true

  - stage: publishmasterassets
    displayName: Uploading new release to cr
    dependsOn: continuousIntegration
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: dockerhubcr
        displayName: hub.docker.com
        pool:
          vmImage: $(vmImage)
        steps:
          - template: ../templates/docker/buildandpush.yml
            parameters:
              workingDirectory: $(System.DefaultWorkingDirectory)
              imageName: ${{ variables.imageName }}
              dockerVersion: ${{ variables.dockerVersion }}
              containerRegistry: ${{ variables.containerRegistry }}
              imageTags: |
                latest
                ${{ variables.version }}

      - job: ghrelease
        displayName: github release
        pool:
          vmImage: $(vmImage)
        steps:
          - template: ../templates/github/createRelease.yml
            parameters:
              workingDirectory: $(System.DefaultWorkingDirectory)
              githubRepository: ${{ variables.githubRepository }}
              version: ${{ variables.version }}
              githubConnection: ${{ variables.githubConnection }}
              isPreRelease: false
              addChangeLog: true
